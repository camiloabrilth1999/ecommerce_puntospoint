---
openapi: 3.0.1
info:
  title: Ecommerce PuntosPoint API
  version: v1
  description: API para sistema de ecommerce con autenticación JWT, gestión de productos,
    categorías, clientes y analytics de ventas.
  contact:
    name: PuntosPoint
    email: noreply@puntospoint.com
paths:
  "/api/v1/analytics/most_purchased_by_category":
    get:
      summary: Obtener productos más comprados por categoría
      tags:
      - Analytics
      description: Obtiene el producto más comprado de cada categoría
      security:
      - Bearer: []
      responses:
        '200':
          description: Productos más comprados por categoría obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        category_id:
                          type: integer
                        category_name:
                          type: string
                        product:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            sku:
                              type: string
                            purchase_count:
                              type: integer
                required:
                - success
                - data
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/api/v1/analytics/top_revenue_by_category":
    get:
      summary: Obtener productos con mayor facturación por categoría
      tags:
      - Analytics
      description: Obtiene el producto que genera más ingresos de cada categoría
      security:
      - Bearer: []
      responses:
        '200':
          description: Productos con mayor facturación por categoría obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        category_id:
                          type: integer
                        category_name:
                          type: string
                        product:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            sku:
                              type: string
                            total_revenue:
                              type: number
                              format: decimal
                required:
                - success
                - data
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/api/v1/analytics/purchases":
    get:
      summary: Obtener lista de compras con filtros
      tags:
      - Analytics
      description: Obtiene una lista paginada de compras con filtros opcionales
      security:
      - Bearer: []
      parameters:
      - name: page
        in: query
        required: false
        description: Número de página
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: Elementos por página (máximo 100)
        example: 25
        schema:
          type: integer
      - name: start_date
        in: query
        format: date
        required: false
        description: Fecha de inicio (YYYY-MM-DD)
        example: '2024-01-01'
        schema:
          type: string
      - name: end_date
        in: query
        format: date
        required: false
        description: Fecha de fin (YYYY-MM-DD)
        example: '2024-12-31'
        schema:
          type: string
      - name: category_id
        in: query
        required: false
        description: ID de categoría para filtrar
        example: 1
        schema:
          type: integer
      - name: client_id
        in: query
        required: false
        description: ID de cliente para filtrar
        example: 1
        schema:
          type: integer
      responses:
        '200':
          description: Lista de compras obtenida exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        quantity:
                          type: integer
                        unit_price:
                          type: number
                          format: decimal
                        total_amount:
                          type: number
                          format: decimal
                        purchase_date:
                          type: string
                          format: datetime
                        status:
                          type: string
                        product:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            sku:
                              type: string
                        client:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            email:
                              type: string
                  pagination:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      per_page:
                        type: integer
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
                required:
                - success
                - data
                - pagination
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/api/v1/analytics/purchases_by_granularity":
    get:
      summary: Obtener compras agrupadas por granularidad temporal
      tags:
      - Analytics
      description: Obtiene las compras agrupadas por día, semana, mes o año
      security:
      - Bearer: []
      parameters:
      - name: granularity
        in: query
        required: true
        description: "Granularidad temporal:\n * `day` \n * `week` \n * `month` \n
          * `year` \n "
        enum:
        - day
        - week
        - month
        - year
        example: month
        schema:
          type: string
      - name: start_date
        in: query
        format: date
        required: false
        description: Fecha de inicio (YYYY-MM-DD)
        schema:
          type: string
      - name: end_date
        in: query
        format: date
        required: false
        description: Fecha de fin (YYYY-MM-DD)
        schema:
          type: string
      - name: category_id
        in: query
        required: false
        description: ID de categoría para filtrar
        schema:
          type: integer
      responses:
        '200':
          description: Granularidad inválida (devuelve datos vacíos)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  granularity:
                    type: string
                  start_date:
                    type: string
                  end_date:
                    type: string
                  data:
                    type: object
                    description: Objeto vacío para granularidades inválidas
                required:
                - success
                - granularity
                - data
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
  "/api/v1/auth/login":
    post:
      summary: Iniciar sesión de administrador
      tags:
      - Autenticación
      description: Autentica un administrador y devuelve un token JWT
      parameters: []
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
                  administrator:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                        enum:
                        - admin
                        - manager
                required:
                - success
                - token
                - administrator
        '401':
          description: Parámetros faltantes
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                administrator:
                  "$ref": "#/components/schemas/LoginRequest"
              required:
              - administrator
  "/api/v1/auth/validate":
    get:
      summary: Validar token JWT
      tags:
      - Autenticación
      description: Valida un token JWT y devuelve información del administrador
      security:
      - Bearer: []
      responses:
        '200':
          description: Token válido
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  administrator:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                        enum:
                        - admin
                        - manager
                required:
                - success
                - administrator
        '401':
          description: Token inválido o faltante
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Error"
servers:
- url: http://localhost:3000
  description: Servidor de desarrollo
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: api.puntospoint.com
  description: Servidor de producción
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Token JWT obtenido del endpoint de login
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Mensaje de error
        details:
          type: string
          description: Detalles adicionales del error
      required:
      - error
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Email del administrador
        password:
          type: string
          description: Contraseña del administrador
      required:
      - email
      - password
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: Token JWT para autenticación
        administrator:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            email:
              type: string
            role:
              type: string
              enum:
              - admin
              - manager
      required:
      - token
      - administrator
